#!/usr/bin/env ruby

require 'rubygems'
require 'tempfile'

require 'ucengine'

lib_dir = File.join(File.dirname(__FILE__), '..', 'lib')
$:.unshift(File.expand_path(lib_dir))
require 'ucengine_document'

config = UCEngine.load_config

UCEngine.run('document') do
  include UCEngineDocument
  begin
    uce = UCEngine.new(config['host'], config['port'], config['debug'])
      uce.connect(config['uid'], :credential => config['credential']) do |uce|

      # Start from the last "document.conversion.done" event
      events = uce.search("", :type => "document.conversion.done", :count => 1, :order => "desc")
      if (events.size == 1)
        start = events[0]['datetime'] + 1
      else
        start = uce.time
      end

      uce.subscribe("", :type => "internal.file.add", :start => start) do |event|
        # TODO: use a thread pool
        Thread.new do
          handle_upload_event(uce, event)
        end
      end
    end
  rescue => error
    puts "Fatal error: #{error}"
    puts error.backtrace
    puts "Retry in 5 seconds ..."
    sleep(5)
    retry
  end
end
